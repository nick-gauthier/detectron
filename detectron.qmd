---
title: "detectron"
format: html
editor: visual
---

```{r}

```

```{r}
reticulate::use_virtualenv('r-detectron')
library(detectron)

install_detectron()
```

```{r}
library(here)
annotations <- here('instances_default.json')
images <- here('img')

detectron_train(annotations, images, max_iter = 500L, num_classes=2L)
```

```{python}
import detectron2
```

You can add options to executable code like this

```{r}
source_python('detectron_module/detectron_finetune.py')
load_and_filter_dataset()
finetune_model()
```

The `echo: false` option disables the printing of code (only output is displayed).

```{r}
reticulate::source_python('inst/detectron_predict.py')

test_img <- 'img/NPP-047 2.7 mm.jpeg'

test_pred <- predict_image(test_img)

visualize_output(test_img, test_pred)

```

```{python}
# import required functions, classes
from sahi import AutoDetectionModel
from sahi.predict import get_sliced_prediction, predict, get_prediction
from sahi.utils.file import download_from_url
from sahi.utils.cv import read_image

detection_model = AutoDetectionModel.from_pretrained(
    model_type='detectron2',
    model_path='Detectron2_Models/model_final.pth',
    config_path='Detectron2_Models/config.yaml',
    confidence_threshold=0.80,
   # image_size=640,
    device="cpu", # or 'cuda:0'
)

result = get_sliced_prediction(
    'img/NPP-047 2.7 mm.jpeg',
    detection_model,
    slice_height = 640,
    slice_width = 640,
    overlap_height_ratio = 0.2,
    overlap_width_ratio = 0.2,
)

result.export_visuals(export_dir="")

```
