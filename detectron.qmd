---
title: "detectron"
format: html
editor: visual
---

```{r}
library(here)
library(detectron)
```

Install the necessary python packages.

```{r}
#install_detectron()
```

Define paths to images and annotations.

```{r}
annotations <- here('../shell_annotations.json')
images <- here('../shell_img')


```

Train a mask-rcnn model.

```{r}
detectron_train(annotations, images, dataset_name = 'shell_train', max_iter = 1000L, num_classes=2L)
```

```{r}
f
```

```{r}
reticulate::source_python('inst/detectron_predict.py')

test_img <- 'img/NPP-047 2.7 mm.jpeg'

test_pred <- predict_image(test_img)

visualize_output(test_img, test_pred)
```

```{python}
# import required functions, classes
from sahi import AutoDetectionModel
from sahi.predict import get_sliced_prediction, predict, get_prediction
from sahi.utils.file import download_from_url
from sahi.utils.cv import read_image

detection_model = AutoDetectionModel.from_pretrained(
    model_type='detectron2',
    model_path='../Detectron2_Models/model_final.pth',
    config_path='../Detectron2_Models/config.yaml',
    confidence_threshold=0.80,
   # image_size=640,
    device="cpu", # or 'cuda:0'
)

result = get_sliced_prediction(
    'img/NPP-047 2.7 mm.jpeg',
    detection_model,
    slice_height = 640,
    slice_width = 640,
    overlap_height_ratio = 0.2,
    overlap_width_ratio = 0.2,
)

result.export_visuals(export_dir="")

```
